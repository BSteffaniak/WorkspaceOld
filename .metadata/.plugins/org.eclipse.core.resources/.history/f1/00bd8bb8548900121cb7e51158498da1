package net.foxycorndog.jfoxylib.components;

import net.foxycorndog.jfoxylib.Frame;

/**
 * Abstract parent class that is used for every Component. Holds the
 * position, size, and parent of each Component. Also includes other
 * things too.
 * 
 * @author	Braden Steffaniak
 * @since	Mar 10, 2013 at 12:24:21 AM
 * @since	v0.1
 * @version Mar 10, 2013 at 12:24:21 AM
 * @version	v0.2
 */
public abstract class Component
{
	private int		x, y;
	private int		alignX, alignY;
	private int		width, height;
	private int		horizontalAlignment, verticalAlignment;
	
	private Panel	parent;
	
	public static final int	LEFT = 0, CENTER = 1, RIGHT = 2, BOTTOM = 0, TOP = 2;
	
	/**
	 * Construct a Component with the specified parent Panel.
	 * 
	 * @param parent The parent Panel of this Component.
	 */
	public Component(Panel parent)
	{
		this.parent = parent;
		
		if (parent != null)
		{
			parent.addChild(this);
		}
	}
	
	/**
	 * Get the horizontal location of this Component.
	 * 
	 * @return The horizontal location of this Component.
	 */
	public int getX()
	{
		return x + alignX;
	}

	/**
	 * Get the vertical location of this Component.
	 * 
	 * @return The vertical location of this Component.
	 */
	public int getY()
	{
		return y + alignY;
	}
	
	/**
	 * Set the location of this Component to the specified location.
	 * 
	 * @param x The new horizontal location of the Component.
	 * @param y The new vertical location of the Component.
	 */
	public void setLocation(int x, int y)
	{
		this.x = x;
		this.y = y;
	}

	/**
	 * Get the horizontal size of this Component.
	 * 
	 * @return The horizontal size of this Component.
	 */
	public int getWidth()
	{
		return width;
	}

	/**
	 * Get the vertical size of this Component.
	 * 
	 * @return The vertical size of this Component.
	 */
	public int getHeight()
	{
		return height;
	}
	
	/**
	 * Set the size of this Component to the specified size.
	 * 
	 * @param x The new horizontal size of the Component.
	 * @param y The new vertical size of the Component.
	 */
	public void setSize(int width, int height)
	{
		this.width  = width;
		this.height = height;
	}
	
	/**
	 * Get the parent Panel of this Component.
	 * 
	 * @return The parent Panel of this Component.
	 */
	public Panel getParent()
	{
		return parent;
	}
	
	/**
	 * Set the parent Panel of this Component.
	 * 
	 * @param parent The parent Panel of this Component.
	 */
	public void setParent(Panel parent)
	{
		this.parent = parent;
	}
	
	public void setAlignment(int horizontal, int vertical)
	{
		this.horizontalAlignment = horizontal;
		this.verticalAlignment   = vertical;
		
		align();
	}
	
	private void align()
	{
		int width  = 0;
		int height = 0;
		
		if (parent == null)
		{
			width  = Frame.getWidth();
			height = Frame.getHeight();
		}
		else
		{
			width  = parent.getWidth();
			height = parent.getHeight();
		}
		
		if (horizontalAlignment == CENTER)
		{
			alignX = width / 2 - getWidth() / 2;
		}
		else if (horizontalAlignment == RIGHT)
		{
			alignX = width - getWidth();
		}
		
		if (verticalAlignment == CENTER)
		{
			alignY = height / 2 - getHeight() / 2;
		}
		else if (verticalAlignment == TOP)
		{
			alignY = height - getHeight();
		}
	}
	
	/**
	 * Method that must be implemented. Renders the Component to
	 * the screen.
	 */
	public abstract void render();
}