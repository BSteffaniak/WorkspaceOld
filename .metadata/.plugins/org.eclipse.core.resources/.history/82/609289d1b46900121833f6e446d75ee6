package net.foxycorndog.arrowide.language;

import java.util.Arrays;

import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.widgets.Display;

public class IdentifierProperties
{
	public final Color COLOR;
	
	public final char PREVIOUS_CHARS[], NEXT_CHARS[];
	
	public final String PREFIXES[], PREVIOUS_WORDS[];
	
	public IdentifierProperties(char previousChars, char nextChars, Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, new String[] {}, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, Color color)
	{
		this(previousChars, new char[] { nextChars }, new String[] {}, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], Color color)
	{
		this(new char[] { previousChars }, nextChars, new String[] {}, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefix, Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, new String[] { prefix }, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefix, Color color)
	{
		this(previousChars, new char[] { nextChars }, new String[] { prefix }, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefix, Color color)
	{
		this(new char[] { previousChars }, nextChars, new String[] { prefix }, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefixes[], Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, prefixes, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefixes[], Color color)
	{
		this(previousChars, new char[] { nextChars }, prefixes, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefixes[], Color color)
	{
		this(new char[] { previousChars }, nextChars, prefixes, new String[] {}, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefix, String previousWords, Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, new String[] { prefix }, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefix, String previousWords, Color color)
	{
		this(previousChars, new char[] { nextChars }, new String[] { prefix }, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefix, String previousWords, Color color)
	{
		this(new char[] { previousChars }, nextChars, new String[] { prefix }, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefixes[], String previousWords[], Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, prefixes, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefixes[], String previousWords[], Color color)
	{
		this(previousChars, new char[] { nextChars }, prefixes, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefixes[], String previousWords[], Color color)
	{
		this(new char[] { previousChars }, nextChars, prefixes, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefix, String previousWords[], Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, new String[] { prefix }, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefix, String previousWords[], Color color)
	{
		this(previousChars, new char[] { nextChars }, new String[] { prefix }, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefix, String previousWords[], Color color)
	{
		this(new char[] { previousChars }, nextChars, new String[] { prefix }, previousWords, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars, String prefixes[], String previousWords, Color color)
	{
		this(new char[] { previousChars }, new char[] { nextChars }, prefixes, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars, String prefixes[], String previousWords, Color color)
	{
		this(previousChars, new char[] { nextChars }, prefixes, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars, char nextChars[], String prefixes[], String previousWords, Color color)
	{
		this(new char[] { previousChars }, nextChars, prefixes, new String[] { previousWords }, color);
	}
	
	public IdentifierProperties(char previousChars[], char nextChars[], String prefixes[], String previousWords[], Color color)
	{
		this.COLOR = color;
		
		this.PREVIOUS_CHARS = previousChars;
		this.NEXT_CHARS     = nextChars;
		
		this.PREFIXES       = prefixes;
		this.PREVIOUS_WORDS = previousWords;
	}
	
	public boolean isQualified(char previousChar, char nextChar, String currentWord, String previousWord)
	{
		boolean found = PREVIOUS_CHARS.length <= 0;
		
		for (char c : PREVIOUS_CHARS)
		{
			if (c == previousChar)
			{
				found = true;
				break;
			}
		}
		
		if (!found)
		{
			System.out.println(currentWord + ", " + nextChar);
			return false;
		}
		
		found = NEXT_CHARS.length <= 0;
		
		for (char c : NEXT_CHARS)
		{
			if (c == nextChar)
			{
				found = true;
				break;
			}
		}
		
		if (!found)
		{
			return false;
		}
		
		found = PREVIOUS_WORDS.length <= 0;
		
		for (String s : PREVIOUS_WORDS)
		{
			if (s.equals(previousWord))
			{
				found = true;
				break;
			}
		}
		
		if (!found)
		{
			return false;
		}
		
		found = PREFIXES.length <= 0;
		
		for (String s : PREFIXES)
		{
			if (currentWord.startsWith(s))
			{
				found = true;
				break;
			}
		}
		
		if (!found)
		{
			return false;
		}
		
		return true;
	}
}