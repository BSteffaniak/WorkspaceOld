package net.foxycorndog.jfoxylib;

import static org.lwjgl.opengl.GL11.GL_ALPHA_TEST;
import static org.lwjgl.opengl.GL11.GL_BLEND;
import static org.lwjgl.opengl.GL11.GL_CULL_FACE;
import static org.lwjgl.opengl.GL11.GL_DEPTH_TEST;
import static org.lwjgl.opengl.GL11.GL_GREATER;
import static org.lwjgl.opengl.GL11.GL_LEQUAL;
import static org.lwjgl.opengl.GL11.GL_MODELVIEW;
import static org.lwjgl.opengl.GL11.GL_MODULATE;
import static org.lwjgl.opengl.GL11.GL_NICEST;
import static org.lwjgl.opengl.GL11.GL_ONE;
import static org.lwjgl.opengl.GL11.GL_ONE_MINUS_SRC_ALPHA;
import static org.lwjgl.opengl.GL11.GL_PERSPECTIVE_CORRECTION_HINT;
import static org.lwjgl.opengl.GL11.GL_PROJECTION;
import static org.lwjgl.opengl.GL11.GL_REPEAT;
import static org.lwjgl.opengl.GL11.GL_SRC_ALPHA;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_2D;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_ENV;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_ENV_MODE;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_S;
import static org.lwjgl.opengl.GL11.GL_TEXTURE_WRAP_T;
import static org.lwjgl.opengl.GL11.glAlphaFunc;
import static org.lwjgl.opengl.GL11.glBlendFunc;
import static org.lwjgl.opengl.GL11.glClearColor;
import static org.lwjgl.opengl.GL11.glClearDepth;
import static org.lwjgl.opengl.GL11.glDepthFunc;
import static org.lwjgl.opengl.GL11.glEnable;
import static org.lwjgl.opengl.GL11.glHint;
import static org.lwjgl.opengl.GL11.glLoadIdentity;
import static org.lwjgl.opengl.GL11.glMatrixMode;
import static org.lwjgl.opengl.GL11.glOrtho;
import static org.lwjgl.opengl.GL11.glPixelStorei;
import static org.lwjgl.opengl.GL11.glTexEnvi;
import static org.lwjgl.opengl.GL11.glTexParameteri;
import static org.lwjgl.opengl.GL11.glViewport;
import static org.lwjgl.util.glu.GLU.gluPerspective;

import org.eclipse.swt.SWT;
import org.eclipse.swt.opengl.GLCanvas;
import org.eclipse.swt.opengl.GLData;
import org.eclipse.swt.widgets.Composite;
import org.lwjgl.opengl.GL11;

public class GL
{
	private static float zClose, zFar;
	private static float FOV;
	
	static
	{
		String paths[] = System.getProperty("java.class.path").split(";");
		
		String nativeLocation = null;
		
		for (int i = 0; i < paths.length; i++)
		{
			// TODO: Make more strict...
			if (paths[i].contains("JFoxyLib"))
			{
				String fileSep = System.getProperty("file.separator");
				StringBuilder builder = new StringBuilder();
				builder.append(paths[i]);//.substring(0, paths[i].length() - 4);
				
				if (builder.indexOf(fileSep + "bin") >= builder.length() - 4)
				{
					builder.delete(builder.length() - 4, builder.length());
					System.out.println(builder);
				}
			}
		}
		
		System.setProperty("org.lwjgl.librarypath", nativeLocation);
	}
	
	public static void initOrtho(int width, int height)
	{
		glViewport(0, 0, width, height);
		glMatrixMode(GL_PROJECTION); // Select The Projection Matrix
		glLoadIdentity(); // Reset The Projection Matrix

		// Calculate The Aspect Ratio Of The Window
		glOrtho(0, width, 0, height, -99999, 99999);
		glMatrixMode(GL_MODELVIEW); // Select The Modelview Matrix
	}
	
//	public static void initBasicView(float zClose, float zFar)
//	{
//		glPixelStorei(GL11.GL_UNPACK_ALIGNMENT, 1);
//		
//		GL.zClose = zClose;
//		GL.zFar   = zFar;
//		
//		glEnable(GL_BLEND);
//		glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
//		
//		if (render3D)
//		{
//			glEnable(GL11.GL_TEXTURE_2D);
//			
//			glEnable(GL_CULL_FACE);
//			
//			glClearColor(0.0f, 0.3f, 0.6f, 0.0f); // Blue Background
//			glClearDepth(1.0); // Depth Buffer Setup
//			glEnable(GL_DEPTH_TEST); // Enables Depth Testing
//			glDepthFunc(GL_LEQUAL); // The Type Of Depth Testing To Do
//			
//			glViewport(0, 0, Display.getWidth(), Display.getHeight());
//			glMatrixMode(GL_PROJECTION); // Select The Projection Matrix
//			glLoadIdentity(); // Reset The Projection Matrix
//			
//			FOV = 55.0f;
//
//			// Calculate The Aspect Ratio Of The Window
//			gluPerspective(FOV, (float)Display.getWidth() / (float)Display.getHeight(), zClose, zFar);
//			glMatrixMode(GL_MODELVIEW);
//
//			// Really Nice Perspective Calculations
//			glHint(GL_PERSPECTIVE_CORRECTION_HINT, GL_NICEST);
//			
//			glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
//		}
//		else
//		{
//			glEnable(GL_TEXTURE_2D);
//			
//			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);
//			glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);
//			
//			glTexEnvi(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);
//			
//			glEnable(GL_BLEND);
//			glBlendFunc(GL_ONE, GL_ONE_MINUS_SRC_ALPHA);
//			
//			glEnable(GL_ALPHA_TEST);
//			glAlphaFunc(GL_GREATER, 0.1f); 
//			
//			glEnable(GL_DEPTH_TEST);
//			
//			glClearColor(0.0f, 0.3f, 0.6f, 0.0f); // Blue Background
//		}
//	}
}