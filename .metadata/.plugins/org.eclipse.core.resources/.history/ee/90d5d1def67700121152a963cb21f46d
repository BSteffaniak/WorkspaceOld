package net.foxycorndog.jfoxylib.components;

import net.foxycorndog.jfoxylib.GL;

import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.opengl.GLCanvas;
import org.eclipse.swt.opengl.GLData;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GLContext;

public abstract class GLPanel extends Panel
{
	private GLCanvas canvas;
	
	private int fps, dfps;
	
	public GLPanel(Panel parent)
	{
		this(parent, Display.getDefault());
	}
	
	public GLPanel(Panel parent, final Display display)
	{
		super(parent);
		
		GLData data = new GLData();
		data.doubleBuffer = true;
		
		GL.init();
		canvas = new GLCanvas(getComposite(), SWT.NONE, data);
		canvas.setBackground(new Color(display, 0, 0, 0));
		
		canvas.setCurrent();
		
		try
		{
			GLContext.useContext(canvas);
		}
		catch (LWJGLException e)
		{
			e.printStackTrace();
		}
		
		final Runnable run = new Runnable()
		{
			public void run()
			{
				GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
				GL11.glLoadIdentity();
				
				render2D();
				
				canvas.swapBuffers();
				display.asyncExec(this);
			}
		};
		
		canvas.addListener(SWT.Paint, new Listener()
		{
			public void handleEvent(Event e)
			{
				run.run();
			}
		});
		
		display.asyncExec(run);
		setControl(canvas);
		
		setSize(100, 100);
		
		GL.initOrtho(getWidth(), getHeight());
		
		canvas.redraw();
	}
	
	public abstract void render2D();
	public abstract void render3D();
}