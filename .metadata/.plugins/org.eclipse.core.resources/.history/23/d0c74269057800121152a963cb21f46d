package net.foxycorndog.jfoxylib.components;

import net.foxycorndog.jfoxylib.GL;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.ControlEvent;
import org.eclipse.swt.events.ControlListener;
import org.eclipse.swt.graphics.Color;
import org.eclipse.swt.opengl.GLCanvas;
import org.eclipse.swt.opengl.GLData;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.lwjgl.LWJGLException;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GLContext;

/**
 * 
 * 
 * @author	Braden Steffaniak
 * @since	Feb 15, 2013 at 11:43:57 PM
 * @since	v0.1
 * @version	v0.1
 */
public abstract class GLPanel extends Panel
{
	private int			fps, dfps;
	
	private long		startTime;
	
	private GLCanvas	canvas;
	
	public GLPanel(Panel parent)
	{
		this(parent, Display.getDefault());
	}
	
	public GLPanel(final Panel parent, final Display display)
	{
		super(parent);
		
		GLData data = new GLData();
		data.doubleBuffer = true;
		
		GL.init();
		canvas = new GLCanvas(getComposite(), SWT.NONE, data);
		
		canvas.setCurrent();
		
		try
		{
			GLContext.useContext(canvas);
		}
		catch (LWJGLException e)
		{
			e.printStackTrace();
		}
		
		final Runnable run = new Runnable()
		{
			public void run()
			{
				GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
				GL11.glLoadIdentity();
				
				render2D();
				
				dfps++;
				
				long newTime = System.currentTimeMillis();
				
				if (startTime + 1000 <= newTime)
				{
					fps  = dfps;
					dfps = 0;
					
					startTime = newTime;
				}
				
				canvas.swapBuffers();
				display.asyncExec(this);
			}
		};
		
		canvas.addListener(SWT.Paint, new Listener()
		{
			public void handleEvent(Event e)
			{
				run.run();
			}
		});
		
		init();
		
		startTime = System.currentTimeMillis();
		display.asyncExec(run);
		setControl(canvas);
		
		parent.getComposite().addControlListener(new ControlListener()
		{
			public void controlResized(ControlEvent e)
			{
				setSize(parent.getWidth(), parent.getHeight());
			}
			
			public void controlMoved(ControlEvent e)
			{
				
			}
		});
		
		canvas.redraw();
	}
	
	public void setSize(int width, int height)
	{
		super.setSize(width, height);
		
		GL.initOrtho(getWidth(), getHeight());
	}

	public abstract void init();
	public abstract void render2D();
	public abstract void render3D();
}