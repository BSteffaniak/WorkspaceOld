package net.foxycorndog.glshaderide;

import java.awt.BorderLayout;
import java.awt.TextField;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.ControlEvent;
import org.eclipse.swt.events.ControlListener;
import org.eclipse.swt.events.KeyEvent;
import org.eclipse.swt.events.KeyListener;
import org.eclipse.swt.events.PaintEvent;
import org.eclipse.swt.events.PaintListener;
import org.eclipse.swt.graphics.Font;
import org.eclipse.swt.graphics.FontData;
import org.eclipse.swt.graphics.Rectangle;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Monitor;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Text;

import com.sun.corba.se.impl.oa.poa.ActiveObjectMap.Key;

public class GLShaderIDE
{
	private Text textField;
	
	public static void main(String args[])
	{
		Display display        = new Display();
		
		Monitor monitor        = display.getPrimaryMonitor();
		final Rectangle screenBounds = monitor.getBounds();
		
		final Shell shell            = new Shell(display);//, SWT.SHELL_TRIM & (~SWT.RESIZE));
		shell.setSize(800, 600);
		final Rectangle shellBounds = shell.getBounds();
		
		shell.setLocation(screenBounds.width / 2 - shellBounds.width / 2, screenBounds.height / 2 - shellBounds.height / 2);
		shell.setText("GLShader IDE");
		
		new GLShaderIDE(display, shell);
		
		shell.open();
		
		while (!shell.isDisposed())
		{
			if (!display.readAndDispatch())
			{
				display.sleep();
			}
		}
		
		display.dispose();
	}
	
	public GLShaderIDE(final Display display, final Shell shell)
	{
//		GridLayout b = new GridLayout();
//		b.makeColumnsEqualWidth = false;
//		
//		shell.setLayout(b);
		
		textField = new Text(shell, SWT.MULTI | SWT.WRAP);
		textField.setText("");
		textField.setBounds(new Rectangle(0, 0, 100, 100));
	    textField.setLayoutData(new GridData(SWT.RIGHT, SWT.TOP, true, true, 1, 1));
	    
	    FontData fontData[] = textField.getFont().getFontData();
	    fontData[0].setHeight(16);
	    
	    textField.setFont(new Font(display, fontData[0]));
	    
	    textField.addKeyListener(new KeyListener()
	    {
			@Override
			public void keyPressed(KeyEvent e)
			{
				if (e.character == 13)
				{
					
				}
				else if (e.character == 8)
				{
					System.out.println("ASdf");
				}
			}

			@Override
			public void keyReleased(KeyEvent e)
			{
				
			}
	    });
	    
	    shell.addControlListener(new ControlListener()
		{
			@Override
			public void controlMoved(ControlEvent e)
			{
				
			}

			@Override
			public void controlResized(ControlEvent e)
			{
				textField.setSize(shell.getBounds().width / 2, shell.getBounds().height);
				textField.setLocation(shell.getBounds().width - textField.getBounds().width, shell.getBounds().height - textField.getBounds().height);
			}
		});
	}
}