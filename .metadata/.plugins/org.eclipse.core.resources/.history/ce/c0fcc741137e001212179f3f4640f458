package net.foxycorndog.thedigginggame.actor;

import java.io.IOException;

import net.foxycorndog.jfoxylib.bundle.Bundle;
import net.foxycorndog.jfoxylib.graphics.SpriteSheet;
import net.foxycorndog.jfoxylib.graphics.Texture;
import net.foxycorndog.jfoxylib.graphics.opengl.GL;
import net.foxycorndog.thedigginggame.map.Map;

/**
 * Class that is used as a Player for the game. Has special sprites and
 * other characteristics.
 * 
 * @author	Braden Steffaniak
 * @since	Feb 22, 2013 at 4:23:36 AM
 * @since	v0.1
 * @version Feb 22, 2013 at 4:23:36 AM
 * @version	v0.1
 */
public class Player extends Actor
{
	/**
	 * Creates a Player. Sets up the vertices and textures for the bundle
	 * that is used in the Actor.
	 * 
	 * @param map The Map to add the Player to.
	 */
	public Player(Map map)
	{
		super(map, 16, 32, 1, 25);
		
		SpriteSheet sprites = null;
		
		try
		{
			sprites = new SpriteSheet("res/images/actors/player/skins/default.png", 16, 8);
		}
		catch (IOException e)
		{
			e.printStackTrace();
		}
		
		Bundle bundle = new Bundle(4 * 6, 2, true, true);
		
		bundle.beginEditingVertices();
		{
			// Head
			bundle.addVertices(GL.genRectVerts(0, 0, 8, 8));
			// Right arm
			bundle.addVertices(GL.genRectVerts(0, 0, 4, 12));
			// Torso
			bundle.addVertices(GL.genRectVerts(0, 0, 8, 12));
			// Left arm
			bundle.addVertices(GL.genRectVerts(0, 0, 4, 12));
			// Right leg
			bundle.addVertices(GL.genRectVerts(0, 0, 4, 12));
			// Left leg
			bundle.addVertices(GL.genRectVerts(0, 0, 4, 12));
		}
		bundle.endEditingVertices();
		
		bundle.beginEditingTextures();
		{
			// Head
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(2, 2, 2, 2)));
			// Right arm
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(13, 5, 1, 3)));
			// Torso
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(5, 5, 2, 3)));
			// Left arm
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(13, 5, 1, 3), true, false));
			// Right leg
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(1, 5, 1, 3)));
			// Left leg
			bundle.addTextures(GL.genRectTextures(sprites.getImageOffsetsf(1, 5, 1, 3), true, false));
		}
		bundle.endEditingTextures();
		
		setSprites(sprites);
		setBundle(bundle);
	}
	
	public void render()
	{
		Bundle bundle       = getBundle();
		SpriteSheet sprites = getSprites();
		
		GL.pushMatrix();
		{
			GL.translate(getX(), getY(), 1);
			
			renderAppendages(bundle, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderAppendages(Bundle bundle, SpriteSheet sprites)
	{
		renderHead(0, bundle, sprites);
		renderRightArm(4, bundle, sprites);
		renderTorso(4 * 2, bundle, sprites);
		renderLeftArm(4 * 3, bundle, sprites);
		renderRightLeg(4 * 4, bundle, sprites);
		renderLeftLeg(4 * 5, bundle, sprites);
	}
	
	private void renderHead(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(4, 12 + 12, 0);
			
//			GL.translate(0, 12 + 12, 0);
//			
//			GL.rotate(0, 0, 45);
//			
//			GL.translate(0, -12 + -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderRightArm(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(0, 12, 0);
			
			GL.translate(0, 12, 0);
			
			GL.rotate(0, 0, 45);
			
			GL.translate(0, -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderTorso(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(4, 12, 0);
			
//			GL.translate(0, 12, 0);
//			
//			GL.rotate(0, 0, 45);
//			
//			GL.translate(0, -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderLeftArm(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(4 + 8, 12, 0);
			
			GL.translate(0, 12, 0);
			
			GL.rotate(0, 0, 45);
			
			GL.translate(0, -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderRightLeg(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(4, 0, 0);
			
			GL.translate(0, 12, 0);
			
			GL.rotate(0, 0, 45);
			
			GL.translate(0, -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
	
	private void renderLeftLeg(int offset, Bundle bundle, SpriteSheet sprites)
	{
		GL.pushMatrix();
		{
			GL.translate(4 + 4, 0, 0);
			
			GL.translate(0, 12, 0);
			
			GL.rotate(0, 0, 45);
			
			GL.translate(0, -12, 0);
			
			bundle.render(GL.QUADS, offset, 4, sprites);
		}
		GL.popMatrix();
	}
}