package net.foxycorndog.arrowide.language;

import java.util.ArrayList;

import net.foxycorndog.arrowide.console.ConsoleStream;
import net.foxycorndog.arrowide.file.FileUtils;
import net.foxycorndog.arrowide.language.assembly.AssemblyCompiler;
import net.foxycorndog.arrowide.language.cpp.CppCompiler;
import net.foxycorndog.arrowide.language.glsl.GLSLCompiler;
import net.foxycorndog.arrowide.language.java.JavaCompiler;

public class LanguageCompiler
{
	private static ArrayList<CompilerListener> listeners;
	
	static
	{
		listeners = new ArrayList<CompilerListener>();
	}
	
	public static void compile(String fileLocation, String code, String outputLocation, ConsoleStream stream)
	{
		if (fileLocation != null)
		{
			String fileName = FileUtils.getFileName(fileLocation);
			
			int language = FileUtils.getLanguage(fileLocation);
			
			if (language == Language.JAVA)
			{
				JavaCompiler.compile(fileName, code, outputLocation, stream, listeners);
			}
			else if (language == Language.GLSL)
			{
				GLSLCompiler.loadVertexShader(fileName, code, stream, listeners);
			}
			else if (language == Language.ASSEMBLY)
			{
				AssemblyCompiler.compile(fileLocation, "", stream, listeners);
			}
			else if (language == Language.CPP)
			{
				CppCompiler.compile(fileLocation, FileUtils.getParentFolder(fileLocation), stream, listeners);
			}
		}
	}
	
	public static void addCompilerListener(CompilerListener listener)
	{
		listeners.add(listener);
	}
}